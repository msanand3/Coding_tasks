{"ast":null,"code":"import Axios from \"axios\";\nimport Cookie from 'js-cookie';\nimport { API_SIGNIN_REQUEST, API_SIGNIN_SUCCESS, API_SIGNIN_FAIL, API_REGISTER_REQUEST, API_REGISTER_SUCCESS, API_REGISTER_FAIL, API_LOGOUT, API_UPDATE_REQUEST, API_UPDATE_SUCCESS, API_UPDATE_FAIL } from \"./Constents\";\nconst token = \"tTU3gFVUdP\";\nconst config = {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n};\n\nconst callAPI = email => async dispatch => {\n  dispatch({\n    type: API_SIGNIN_REQUEST,\n    payload: {\n      email\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"https://f0ztti2nsk.execute-api.ap-south-1.amazonaws.com/v1/consignment/fetch\", {\n      email: email\n    }, config);\n    console.log(data.data);\n\n    if (data) {\n      dispatch({\n        type: API_SIGNIN_SUCCESS,\n        payload: data.data\n      });\n      Cookie.set('APIInfo', JSON.stringify(data.data));\n    } else {\n      dispatch({\n        type: API_SIGNIN_FAIL,\n        payload: data.message\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: API_SIGNIN_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport default callAPI;","map":{"version":3,"sources":["/home/radhetians/Desktop/Flipr-Coding-Task/frontend/src/Action/APIEndPoint.js"],"names":["Axios","Cookie","API_SIGNIN_REQUEST","API_SIGNIN_SUCCESS","API_SIGNIN_FAIL","API_REGISTER_REQUEST","API_REGISTER_SUCCESS","API_REGISTER_FAIL","API_LOGOUT","API_UPDATE_REQUEST","API_UPDATE_SUCCESS","API_UPDATE_FAIL","token","config","headers","Authorization","callAPI","email","dispatch","type","payload","data","post","console","log","set","JSON","stringify","message","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,SACIC,kBADJ,EAEIC,kBAFJ,EAGIC,eAHJ,EAIIC,oBAJJ,EAKIC,oBALJ,EAMIC,iBANJ,EAOIC,UAPJ,EAQIC,kBARJ,EASIC,kBATJ,EAUIC,eAVJ,QAWO,aAXP;AAaA,MAAMC,KAAK,GAAG,YAAd;AACA,MAAMC,MAAM,GAAG;AACXC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,aAAa,EAAG,UAASH,KAAM;AAAjC;AADE,CAAf;;AAIA,MAAMI,OAAO,GAAIC,KAAD,IAAW,MAAMC,QAAN,IAAmB;AAE1CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEjB,kBAAR;AAA4BkB,IAAAA,OAAO,EAAE;AAAEH,MAAAA;AAAF;AAArC,GAAD,CAAR;;AACA,MAAI;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMrB,KAAK,CAACsB,IAAN,CACnB,8EADmB,EAEnB;AAACL,MAAAA,KAAK,EAAGA;AAAT,KAFmB,EAGnBJ,MAHmB,CAAvB;AAKIU,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACA,IAAjB;;AACJ,QAAGA,IAAH,EAAQ;AACJH,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEhB,kBAAR;AAA4BiB,QAAAA,OAAO,EAAEC,IAAI,CAACA;AAA1C,OAAD,CAAR;AACApB,MAAAA,MAAM,CAACwB,GAAP,CAAW,SAAX,EAAsBC,IAAI,CAACC,SAAL,CAAeN,IAAI,CAACA,IAApB,CAAtB;AACH,KAHD,MAGO;AACHH,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEf,eAAR;AAAyBgB,QAAAA,OAAO,EAAEC,IAAI,CAACO;AAAvC,OAAD,CAAR;AACH;AAEJ,GAdD,CAcE,OAAOC,KAAP,EAAc;AACZX,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEf,eAAR;AAAyBgB,MAAAA,OAAO,EAAES,KAAK,CAACD;AAAxC,KAAD,CAAR;AACH;AACJ,CApBD;;AAqBA,eAAeZ,OAAf","sourcesContent":["import Axios from \"axios\";\nimport Cookie from 'js-cookie';\n\nimport {\n    API_SIGNIN_REQUEST,\n    API_SIGNIN_SUCCESS,\n    API_SIGNIN_FAIL,\n    API_REGISTER_REQUEST,\n    API_REGISTER_SUCCESS,\n    API_REGISTER_FAIL,\n    API_LOGOUT,\n    API_UPDATE_REQUEST,\n    API_UPDATE_SUCCESS,\n    API_UPDATE_FAIL\n} from \"./Constents\";\n\nconst token = \"tTU3gFVUdP\";\nconst config = {\n    headers: { Authorization: `Bearer ${token}` }\n};\n\nconst callAPI = (email) => async(dispatch) => {\n\n    dispatch({ type: API_SIGNIN_REQUEST, payload: { email} });\n    try {\n        const { data } = await Axios.post(\n            \"https://f0ztti2nsk.execute-api.ap-south-1.amazonaws.com/v1/consignment/fetch\",\n            {email : email},\n            config\n            );\n            console.log(data.data)\n        if(data){\n            dispatch({ type: API_SIGNIN_SUCCESS, payload: data.data });\n            Cookie.set('APIInfo', JSON.stringify(data.data));\n        } else {\n            dispatch({ type: API_SIGNIN_FAIL, payload: data.message });\n        }\n        \n    } catch (error) {\n        dispatch({ type: API_SIGNIN_FAIL, payload: error.message });\n    }\n}\nexport default callAPI;"]},"metadata":{},"sourceType":"module"}